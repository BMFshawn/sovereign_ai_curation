name: Weekly Sovereign AI Email Summary

# KST 매주 금요일 09:00 → UTC 매주 금요일 00:00
on:
  schedule:
    - cron: '0 0 * * FRI'
  workflow_dispatch:

jobs:
  email_summary:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai requests

      - name: Generate summary and date_range
        id: summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python - << 'EOF' > summary.txt
          import os
          from datetime import datetime, timedelta, timezone
          from openai import OpenAI

          # 1) 날짜 계산 (UTC→KST)
          now_utc = datetime.now(timezone.utc)
          today_kst = now_utc + timedelta(hours=9)
          week_ago_kst = today_kst - timedelta(days=7)
          date_range = f"{week_ago_kst:%Y-%m-%d} to {today_kst:%Y-%m-%d}"

          # 2) OpenAI client 초기화 (v1.x)
          client = OpenAI(api_key=os.environ["OPENAI_API_KEY"])

          system = "You are a helpful assistant that summarizes sovereign AI comments by Korean officials."
          user = (
            f"Summarize comments on sovereign AI by Minister Baek Gyeonghun "
            f"and AI Future Planning Chief Ha Jungwoo from {date_range}, "
            "collecting from Facebook, Instagram, X, and YouTube."
          )

          resp = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
              {"role": "system", "content": system},
              {"role": "user",   "content": user}
            ],
            temperature=0.3,
          )
          print(resp.choices[0].message.content)
          # echo date_range for later use
          print(date_range)
          EOF

          # GITHUB_OUTPUT에 멀티라인 body, 단일라인 date_range 등록
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat summary.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          # 마지막 줄(summary.txt 다음 줄)에 date_range가 있으므로, 추출해서 출력
          tail -n1 summary.txt | sed -n '$p'  # (if summary.txt only contains summary, adjust accordingly)

          # Alternatively, capture date_range directly if printed last by Python:
          # date_range=$(tail -n1 summary.txt)
          # echo "date_range=$date_range" >> $GITHUB_OUTPUT

      - name: Send email via SMTP
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port:    587
          username:       ${{ secrets.SMTP_USERNAME }}
          password:       ${{ secrets.SMTP_PASSWORD }}
          subject:        "【전주 소버린 AI 코멘트 정리】 (${{ steps.summary.outputs.date_range }})"
          body:           ${{ steps.summary.outputs.body }}
          to:             ${{ secrets.EMAIL_TO }}
          from:           ${{ secrets.EMAIL_FROM }}

      - name: Notify completion
        run: echo "✅ Email sent: ${{ steps.summary.outputs.date_range }}"
