name: Weekly Sovereign AI Summary

# 매주 금요일 9:00 KST → 00:00 UTC
on:
  schedule:
    - cron: '0 0 * * FRI'
  workflow_dispatch:

jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai requests

      - name: Generate and post summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          python - << 'EOF'
          import os, openai, requests
          from datetime import datetime, timedelta

          # 날짜 범위 계산 (KST 기준)
          today = datetime.utcnow() + timedelta(hours=9)
          week_ago = today - timedelta(days=7)
          dr = f"{week_ago:%Y-%m-%d} to {today:%Y-%m-%d}"

          # OpenAI 설정
          openai.api_key = os.environ["OPENAI_API_KEY"]
          system = "You are a helpful assistant that summarizes sovereign AI comments by Korean officials."
          user = (
            f"Summarize comments on sovereign AI by Minister Baek Gyeonghun "
            f"and AI Future Planning Chief Ha Jungwoo from {dr}, "
            "collecting from Facebook, Instagram, X, and YouTube."
          )
          resp = openai.ChatCompletion.create(
            model="gpt-4o-mini",
            messages=[{"role":"system","content":system},
                      {"role":"user","content":user}],
            temperature=0.3,
          )
          summary = resp.choices[0].message.content

          # Teams 전송
          payload = {
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            "summary": "전주 소버린 AI 코멘트 정리",
            "themeColor": "0078D7",
            "title": f"전주 소버린 AI 코멘트 정리 ({dr})",
            "sections": [{"text": summary}]
          }
          r = requests.post(os.environ["TEAMS_WEBHOOK_URL"], json=payload)
          r.raise_for_status()
          EOF

      - name: Notify success
        run: echo "✅ Weekly summary sent to Teams"
